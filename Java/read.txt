java basic
'''''''''
datatypes
'''''''''
primitive : byte, short, int, long, float, double, char, boolean


String datatype :
'''''''''''''''''
endsWith()
indexOf()
startsWith()
replace()
toLowerCase()
toUpperCase()
trim()

Escape sequence :
'''''''''''''''''
\n -> new line
\" -> double quotes
\\ -> 
\' -> single quotes
\t -> tab


Arrays
'''''''
int[] numbers= new int[5]

for displaying the number 

Arrays.toString(numbers)

Arrays.sort(number)



multi Dimensional Arrays
'''''''''''''''''''''''
int[][] numbers=new int[5][5]

int multi dimensional array deep to string instead of tostring in single dimensional array



constants
'''''''''

finel is used to initialize

finel float PI=3.14f


Arithmatic Expression
'''''''''''''''''''''
*
+
-
/
/
++
--


preference :
'''''''''''
()
*/
+-



casting
'''''''''
implicit casting : automatic conversion

byte > short > int > long > float > double


explicit casting: 

    double x=1.1
    int y = (int)x + 2


Integer.parsInt()  // string to Integer
double.parseDouble()


math class
"""""""""

performing mathamatical operation


Math.round()
Math.ceil()
Math.random()
Math.floor()
Math.max()

Reading input
''''''''''''''





jdk = jre + compiler

jre = jvm 

buzzwords : 
'''''''''''
1.platform independent 

        jvm : operating system depended

        Diffferent operating syetem habe different jvm and output is ame 

2.object oriented concept
        abstracion,encapsulation,polymorphism,inheritence
3.simple to implement
4.secure
5.robust
6.Portable
7.Multithreading: improve cpu utiliZation
8.Distributed Application
9.Architecture Neutral




oops:
''''
object :real world  entity consist of property and tasks
            eg: human  property : name,color,height,weight  task : walk(),run(),read()

class  : blue print of the object 
            student property: name,roll no, DOJ




Abstracion :
        showing only essential part and hiding the implementation
        download application apk file is get no other data can seen everthing is hidden


Encapsulation:
        Binding varibles and methods under single enntity




inheritence:

        Aquiring propery of one class to another class

        parent class and child class
        superclass subclass relation

        single inheritance
        multi level inheritance
        hierachical inheritance




polymorphism:performing same task in different ways

        Add()
        Add(int a,int b)

        draw()=> triangle,square,rectagle

        



         

